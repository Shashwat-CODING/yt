name: Generate YouTube Cookies

on:
  schedule:
  workflow_dispatch:  # Also allows manual triggering

# Add this permissions block
permissions:
  contents: write

jobs:
  generate-cookies:
    # Rest of your workflow remains the same
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          pip install selenium webdriver-manager
          sudo apt-get update
          sudo apt-get install -y chromium-browser
          
      - name: Generate cookies.txt
        run: |
          python - <<EOF
          from selenium import webdriver
          from selenium.webdriver.chrome.options import Options
          from selenium.webdriver.chrome.service import Service
          from webdriver_manager.chrome import ChromeDriverManager
          from selenium.webdriver.common.by import By
          from selenium.webdriver.support.ui import WebDriverWait
          from selenium.webdriver.support import expected_conditions as EC
          import time
          import os
          
          # Setup headless browser
          options = Options()
          options.add_argument('--headless')
          options.add_argument('--no-sandbox')
          options.add_argument('--disable-dev-shm-usage')
          options.add_argument('--disable-blink-features=AutomationControlled')
          options.add_argument('--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36')
          
          service = Service(ChromeDriverManager().install())
          driver = webdriver.Chrome(service=service, options=options)
          
          try:
              # Login to YouTube
              driver.get('https://accounts.google.com/signin')
              print("Navigating to Google login...")
              
              # Enter email
              wait = WebDriverWait(driver, 10)
              email_field = wait.until(EC.presence_of_element_located((By.ID, 'identifierId')))
              email_field.send_keys('princeytdbgit@gmail.com')  # Replace with your email
              
              next_button = wait.until(EC.element_to_be_clickable((By.ID, 'identifierNext')))
              next_button.click()
              print("Email entered, proceeding to password...")
              
              # Enter password
              time.sleep(2)  # Brief pause for page transition
              password_field = wait.until(EC.element_to_be_clickable((By.NAME, 'Passwd')))
              password_field.send_keys('princeyt@123@1')  # Replace with your password
              
              password_next = wait.until(EC.element_to_be_clickable((By.ID, 'passwordNext')))
              password_next.click()
              print("Password entered, waiting for login...")
              
              # Wait for login to complete
              time.sleep(5)
              
              # Visit YouTube to get cookies
              driver.get('https://www.youtube.com')
              print("Navigated to YouTube, getting cookies...")
              time.sleep(3)
              
              # Create utils directory if it doesn't exist
              os.makedirs('utils', exist_ok=True)
              
              # Save cookies to cookies.txt in Netscape format
              with open('utils/cookies.txt', 'w') as file:
                  file.write('# Netscape HTTP Cookie File\n')
                  for cookie in driver.get_cookies():
                      domain = cookie['domain']
                      flag = 'TRUE'
                      path = cookie['path']
                      secure = 'TRUE' if cookie['secure'] else 'FALSE'
                      expires = str(cookie['expiry']) if 'expiry' in cookie else '0'
                      name = cookie['name']
                      value = cookie['value']
                      file.write(f"{domain}\t{flag}\t{path}\t{secure}\t{expires}\t{name}\t{value}\n")
              
              print("Cookies saved to utils/cookies.txt")
              
          except Exception as e:
              print(f"Error occurred: {str(e)}")
          
          finally:
              driver.quit()
          EOF
          
      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add utils/cookies.txt
          git commit -m "Update cookies.txt every 3 hours" || echo "No changes to commit"
          git push
